/*doc
---
title: Page
name: page
category: Grid
---
The top level of a application / website is the `page`, it behaves like a much simpler `grid`:

```html_example
<!-- the .page element is usually the `body` -->
<div class="page">
  <!-- .page-viewport wraps the whole content (for ember applications, this would be the root element -->
  <div class="page-viewport">
    <!-- .page-content contains all the page specific content -->
    <main class="page-main" style="background: #bbb">
      <section class="page-content">
        <header class="page-content-header">
          <h1>Page header</h1>
        </header>
        <section class="page-content-main">
          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
        </section>
        <footer class="page-content-footer">
          <small>&copy; Page footer</small>
        </footer>
      </section>
    </main>
  </div>
</div>
```

Modifiers:

- `page-content--scroll` Makes page-content scrollable
- `page-main--scroll` Makes page-main scrollable

*/
.page {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  min-height: 100%;
}

.page-viewport,
.page.ember-application > .ember-view {
  flex-grow: 1;
  display: flex;
  flex-direction: row;
  position: relative;
  overflow: hidden;
  width: 100vw;
}

.page-viewport--column,
.page--column.ember-application > .ember-view {
  flex-direction: column;
}

.page-content-header,
.page-content-footer {
  flex: 0 0 auto;
}

.page-content {
  flex-direction: column;
  min-height: 100vh;
}

.page-main, .page-content {
  display: flex;
  background: var(--body-background-color);
  flex: 1 1 100vw;
}

.page-content--scroll,
.page-main--scroll {
  height: 100vh;
  overflow: auto;
  scroll-behavior: smooth;
  /* https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling */
  -webkit-overflow-scrolling: touch;
}

.page-content-main {
  flex: 1 0 auto;
}

.page-content {
  flex-grow: 1;
  padding: var(--page-padding-v) var(--page-padding-h);
}

@media (--lg-viewport) {
  .page-content {
    padding: calc(var(--page-padding-v) * 1.25) calc(var(--page-padding-h) * 1.25);
  }
}

@media (--xl-viewport) {
  .page-content {
    padding: calc(var(--page-padding-v) * 1.5) calc(var(--page-padding-h) * 1.5);
  }
}
